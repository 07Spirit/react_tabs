{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tab","tab","selectedTabId","onTabSelected","id","className","classNames","href","onClick","title","Tabs","tabs","map","content","App","useState","selectedTabIdEdit","currentTab","find","ReactDOM","render","document","getElementById"],"mappings":"4MAoBaA,EAA0B,SAAC,GAIjC,IAHLC,EAGI,EAHJA,IACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEQC,EAAOH,EAAPG,GAER,OACE,oBAEE,UAAQ,MACRC,UAAWC,IAAW,CAAE,YAAaF,IAAOF,IAH9C,SAKE,mBACEK,KAAI,WAAMH,GACV,UAAQ,UACRA,GAAIA,EACJI,QAAS,kBAAML,EAAcC,IAJ/B,SAMGH,EAAIQ,SAVFL,IAgBEM,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAT,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,OACE,mCACGQ,EAAKC,KAAI,SAACX,GAAD,OACR,cAAC,EAAD,CACEA,IAAKA,EACLE,cAAeA,EACfD,cAAeA,UClDZS,G,MAAO,CAClB,CAAEP,GAAI,QAASK,MAAO,QAASI,QAAS,eACxC,CAAET,GAAI,QAASK,MAAO,QAASI,QAAS,eACxC,CAAET,GAAI,QAASK,MAAO,QAASI,QAAS,iBAG7BC,EAAgB,WAC3B,MAA2CC,mBAASJ,EAAK,GAAGP,IAA5D,mBAAOF,EAAP,KAAsBc,EAAtB,KACMC,EAAaN,EAAKO,MAAK,SAACjB,GAAD,OAASA,EAAIG,KAAOF,MAAkBS,EAAK,GAChEE,EAAmBI,EAAnBJ,QAASJ,EAAUQ,EAAVR,MAEjB,OACE,sBAAKJ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAA0CI,KAE1C,sBAAK,UAAQ,gBAAb,UACE,qBAAKJ,UAAU,gBAAf,SACE,6BACE,cAAC,EAAD,CACEM,KAAMA,EACNT,cAAeA,EACfC,cAAea,QAKrB,qBAAKX,UAAU,QAAQ,UAAQ,aAA/B,SACGQ,WC9BXM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.46428b26.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype TabsType = {\n  id: string;\n  title: string;\n  content: string;\n};\n\ntype Props = {\n  tabs: TabsType[];\n  selectedTabId: string;\n  onTabSelected: React.Dispatch<React.SetStateAction<string>>;\n};\n\ntype PropsTab = {\n  tab: TabsType;\n  selectedTabId: string;\n  onTabSelected: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const Tab: React.FC<PropsTab> = ({\n  tab,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const { id } = tab;\n\n  return (\n    <li\n      key={id}\n      data-cy=\"Tab\"\n      className={classNames({ 'is-active': id === selectedTabId })}\n    >\n      <a\n        href={`#${id}`}\n        data-cy=\"TabLink\"\n        id={id}\n        onClick={() => onTabSelected(id)}\n      >\n        {tab.title}\n      </a>\n    </li>\n  );\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  return (\n    <>\n      {tabs.map((tab) => (\n        <Tab\n          tab={tab}\n          onTabSelected={onTabSelected}\n          selectedTabId={selectedTabId}\n        />\n      ))}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, selectedTabIdEdit] = useState(tabs[0].id);\n  const currentTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n  const { content, title } = currentTab;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${title}`}</h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            <Tabs\n              tabs={tabs}\n              selectedTabId={selectedTabId}\n              onTabSelected={selectedTabIdEdit}\n            />\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}